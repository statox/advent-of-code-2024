import itertools

from ...base import BaseSolution, answer


class Solution(BaseSolution):
    @answer(18, 2483)
    def part1(self):
        l = self.lines
        H = len(l)
        W = len(l[0])
        total = 0
        search = list("XMAS")
        r = range(4)

        for y in range(H):
            for x in range(W):
                if l[y][x] != "X":
                    continue

                if x < W - 3:
                    if y > 2 and [l[y - i][x + i] for i in r] == search:
                        total += 1

                    if [l[y][x + i] for i in r] == search:
                        total += 1

                    if y < H - 3 and [l[y + i][x + i] for i in r] == search:
                        total += 1

                if y > 2 and [l[y - i][x] for i in r] == search:
                    total += 1

                if y < H - 3 and [l[y + i][x] for i in r] == search:
                    total += 1

                if x > 2:
                    if y > 2 and [l[y - i][x - i] for i in r] == search:
                        total += 1

                    if [l[y][x - i] for i in r] == search:
                        total += 1

                    if y < H - 3 and [l[y + i][x - i] for i in r] == search:
                        total += 1

        return total

    @answer(9, 1925)
    def part2(self):
        l = self.lines

        return len(
            [
                True
                for x in range(1, len(l[0]) - 1)
                for y in range(1, len(l) - 1)
                # We get both branches of the X as a list which we convert to a tuple
                # to be able to look it up in the list of tuples generated by list(itertools...)
                if tuple(
                    [
                        # Join the branches of the X from a list to a string
                        "".join(letters)
                        # We use zip to re-pack both branches of the X together
                        for letters in zip(
                            # We get 3 tuples of the letters of both branches of the X from left to right
                            *[(l[y + i][x + i], l[y - i][x + i]) for i in range(-1, 2)]
                        )
                    ]
                )
                # The checked list is as follow: [('MAS', 'MAS'), ('MAS', 'SAM'), ('SAM', 'MAS'), ('SAM', 'SAM')]
                in list(itertools.product(["MAS", "SAM"], repeat=2))
            ]
        )

        # s = ("MAS", "SAM")
        # return sum(
        #     [
        #         1
        #         for x in range(1, len(l[0]) - 1)
        #         for y in range(1, len(l) - 1)
        #         if "".join(l[y + i][x + i] for i in range(-1, 2)) in s
        #         and "".join(l[y - i][x + i] for i in range(-1, 2)) in s
        #     ]
        # )

        # H = len(l)
        # W = len(l[0])
        # total = 0
        # for y in range(1, H - 1):
        #     for x in range(1, W - 1):
        #         if l[y][x] != "A":
        #             continue

        #         d1 = l[y - 1][x - 1] + l[y][x] + l[y + 1][x + 1]
        #         d2 = l[y + 1][x - 1] + l[y][x] + l[y - 1][x + 1]

        #         if d1 in s and d2 in s:
        #             total += 1

        # return total
