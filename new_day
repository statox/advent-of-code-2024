#!/usr/bin/env python3

import os
import shutil
import sys
from argparse import ArgumentParser
from datetime import datetime
from pathlib import Path

parser = ArgumentParser()
parser.add_argument(
    "-d",
    "--day",
    dest="day",
    required=False,
    type=int,
    choices=list(range(1, 26)),
    help="The day to create (if omitted and current month is december, default to today)",
)
parser.add_argument(
    "-y",
    "--year",
    dest="year",
    required=False,
    type=str,
    help="The year of the day to create (default to current year)",
    default=datetime.now().year,
)


def confirm(prompt):
    user_input = input(prompt + " (yes/no): ").lower()
    return user_input in ["yes", "y"]


def validate_args():
    args = parser.parse_args()

    current_month = datetime.now().month
    if current_month != 12 and args.day is None:
        print("The day parameter can be omitted only in december")
        sys.exit(1)

    day = args.day or datetime.now().day
    year = args.year

    return (day, year)


if __name__ == "__main__":
    # Validate arguments
    (day, year) = validate_args()

    # Create paths
    script_directory = Path(__file__).parent.absolute()
    template_directory = Path(script_directory, "data/templates")
    code_directory = Path(script_directory, "libs", str(year), str(f"day{day:02}"))

    # Make the user validate what we are going to do
    print(f"About to create the following directory for day {day:02}/{year}:")
    print(code_directory)
    if not confirm("Confirm?"):
        print("Aborting")
        sys.exit(0)

    # Check if paths already exists
    if code_directory.exists():
        print("The directory already exists. Stopping here")
        sys.exit(0)

    # Create directory
    code_directory.mkdir(parents=True)

    # Copy template files
    for filename in os.listdir(template_directory):
        if not filename.endswith(".tmpl"):
            continue

        src_path = Path(template_directory, filename)
        dest_filename = filename[:-5]  # Remove '.tmpl'
        dest_path = Path(code_directory, dest_filename)

        shutil.copy(src_path, dest_path)

    print("Files created successfully")
